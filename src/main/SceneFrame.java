/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main;
import scene.Scene;
import javax.swing.JButton;
import main.EngineGame;
import scene.SceneTable;
import java.util.ArrayList;

public class SceneFrame extends javax.swing.JFrame {  
    
    private ArrayList<Scene> sceneList;
    private int[] buttonVis;
    int currentIdx;
    int nextIdx;
    private SceneTable scenetable;
    Scene currentScene;
    
    /**
     * Creates new form SceneFrame
     */
    public SceneFrame() {  
        sceneList = new ArrayList<Scene>();
        buttonVis = null;
        initComponents(); 
        nextIdx= -1;
        scenetable = new SceneTable();
        scenetable.initTable();
        currentIdx = 0;
    }   
    
    public void addScene(Scene aScene, int idx){
        
        sceneList.add(idx, aScene);
        
        if(idx == 0)
        {
            SceneManager.add(aScene, idx); 
        }
    }
    
    
    
    public void displayScene(int idx){
        
        if (idx != -1)
        {
            currentScene = sceneList.get(idx);
            buttonVis = scenetable.getButtonVisibility(idx);
            currentScene.displayEvents();
            SceneManager.getComponent(0).setVisible(false);
            SceneManager.remove(0);
            //currentScene = (Scene)SceneManager.getComponent(idx);            
            
            SceneManager.add(currentScene);
            SceneManager.getComponent(0).setVisible(true);
            
            //SceneManager.getComponent(currentIdx).setVisible(false);
            
            currentScene.displayEvents();
      
            currentIdx = idx;
        }
    }
    //public void displayScene(Scene)

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SceneManager1 = new scene.ScenePanel();
        SceneManager = new scene.ScenePanel();
        torchButton = new javax.swing.JButton();
        keyButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        storyText = new javax.swing.JTextArea();
        ForwardButton = new javax.swing.JButton();
        LeftButton = new javax.swing.JButton();
        RightButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        swordButton = new javax.swing.JButton();

        javax.swing.GroupLayout SceneManager1Layout = new javax.swing.GroupLayout(SceneManager1);
        SceneManager1.setLayout(SceneManager1Layout);
        SceneManager1Layout.setHorizontalGroup(
            SceneManager1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        SceneManager1Layout.setVerticalGroup(
            SceneManager1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adventure Game");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 0, 255));
        setForeground(new java.awt.Color(255, 51, 51));

        SceneManager.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout SceneManagerLayout = new javax.swing.GroupLayout(SceneManager);
        SceneManager.setLayout(SceneManagerLayout);
        SceneManagerLayout.setHorizontalGroup(
            SceneManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        SceneManagerLayout.setVerticalGroup(
            SceneManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        torchButton.setBackground(new java.awt.Color(51, 51, 51));
        torchButton.setForeground(new java.awt.Color(102, 102, 102));
        torchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/torch2.png"))); // NOI18N
        torchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        torchButton.setEnabled(false);
        torchButton.setFocusable(false);
        torchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                torchButtonActionPerformed(evt);
            }
        });

        keyButton.setBackground(new java.awt.Color(51, 51, 51));
        keyButton.setForeground(new java.awt.Color(102, 102, 102));
        keyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/key.png"))); // NOI18N
        keyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        keyButton.setEnabled(false);
        keyButton.setFocusable(false);
        keyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyButtonActionPerformed(evt);
            }
        });

        storyText.setColumns(20);
        storyText.setEditable(false);
        storyText.setRows(5);
        storyText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(storyText);

        ForwardButton.setText("Forward");
        ForwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForwardButtonActionPerformed(evt);
            }
        });

        LeftButton.setText("Left");
        LeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftButtonActionPerformed(evt);
            }
        });

        RightButton.setText("Right");
        RightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightButtonActionPerformed(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        swordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Steel_sword_icon.png"))); // NOI18N
        swordButton.setEnabled(false);
        swordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(SceneManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(torchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(keyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(swordButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(BackButton)
                            .addGap(80, 80, 80)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(LeftButton)
                        .addGap(39, 39, 39)
                        .addComponent(RightButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(ForwardButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SceneManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(torchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(keyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(swordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(ForwardButton)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LeftButton)
                            .addComponent(RightButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BackButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void torchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_torchButtonActionPerformed
   currentScene=sceneList.get(currentIdx);
   currentScene.isDark=false;
   currentScene.updateButtons();
   this.displayScene(currentIdx);
   currentScene.updateDirectionButtons();
   
    }//GEN-LAST:event_torchButtonActionPerformed

    private void keyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyButtonActionPerformed
   currentScene=sceneList.get(currentIdx);
   currentScene.isClosed=false;
   this.displayScene(currentIdx);
   currentScene.updateDirectionButtons();
    }//GEN-LAST:event_keyButtonActionPerformed

    private void ForwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForwardButtonActionPerformed
        nextIdx = scenetable.changeScene(currentIdx, 0);
        this.displayScene(nextIdx);
        currentScene.updateDirectionButtons();
    }//GEN-LAST:event_ForwardButtonActionPerformed

    private void LeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftButtonActionPerformed
        nextIdx = scenetable.changeScene(currentIdx, 3);
        this.displayScene(nextIdx);
        currentScene.updateDirectionButtons();
        
    }//GEN-LAST:event_LeftButtonActionPerformed

    private void RightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightButtonActionPerformed
        nextIdx = scenetable.changeScene(currentIdx, 2);
        this.displayScene(nextIdx);
        currentScene.updateDirectionButtons();
    }//GEN-LAST:event_RightButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        nextIdx = scenetable.changeScene(currentIdx, 1);
        this.displayScene(nextIdx);
        currentScene.updateDirectionButtons();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void swordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swordButtonActionPerformed
   currentScene=sceneList.get(currentIdx);
   currentScene.isAlive=false;
   this.displayScene(currentIdx);
   currentScene.updateDirectionButtons();
    }//GEN-LAST:event_swordButtonActionPerformed

    public void setTextArea(String TA){
        storyText.setText(TA);
    }
    
    public void repaintScene(){
        this.displayScene(currentIdx);
    }

    
    public void updateDirections(boolean forward, boolean back, boolean left, boolean right){
        ForwardButton.setEnabled(forward);
        BackButton.setEnabled(back);
        LeftButton.setEnabled(left);
        RightButton.setEnabled(right);
        
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton ForwardButton;
    private javax.swing.JButton LeftButton;
    private javax.swing.JButton RightButton;
    private javax.swing.JPanel SceneManager;
    private javax.swing.JPanel SceneManager1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JButton keyButton;
    private javax.swing.JTextArea storyText;
    public javax.swing.JButton swordButton;
    public javax.swing.JButton torchButton;
    // End of variables declaration//GEN-END:variables
}
